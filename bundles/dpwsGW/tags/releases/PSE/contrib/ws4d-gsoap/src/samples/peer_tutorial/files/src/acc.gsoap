// Reminder: Modify typemap.dat to customize the header file generated by wsdl2h
/* acc.gsoap
   Generated by wsdl2h 1.2.10 from AirConditionerController.wsdl and typemap.dat
   2008-08-13 05:07:30 GMT
   Copyright (C) 2001-2008 Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/* NOTE:

 - Compile this file with soapcpp2 to complete the code generation process.
 - Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'WS/typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) to browse this file.
 - Use wsdl2h option -l to view the software license terms.

   DO NOT include this file directly into your project.
   Include only the soapcpp2-generated headers and source code files.
*/

//gsoapopt cw

/******************************************************************************\
 *                                                                            *
 * http://www.ws4d.org/axis2/tutorial/AirConditionerControl                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/

#import "devprof_2006_02.gsoap"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

acc1 = "http://www.ws4d.org/axis2/tutorial/AirConditionerControl"

*/

//gsoap acc1  schema namespace:	http://www.ws4d.org/axis2/tutorial/AirConditionerControl
//gsoap acc1  schema elementForm:	qualified
//gsoap acc1  schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Schema Types                                                               *
 *                                                                            *
\******************************************************************************/

struct _acc1__EmptyMessage
{
  void *_;
};

/// "http://www.ws4d.org/axis2/tutorial/AirConditionerControl":ACStateType is a complexType.
struct acc1__ACStateType
{
/// Element CurrentTemp of type xs:int.
    int                                  CurrentTemp                    1;	///< Required element.
/// Element TargetTemp of type xs:int.
    int                                  TargetTemp                     1;	///< Required element.
/// Element DeviceId of type xs:string.
    char                                *DeviceId                       1;	///< Required element.
/// Element ServiceId of type xs:string.
    char                                *ServiceId                      1;	///< Required element.
};

/// "http://www.ws4d.org/axis2/tutorial/AirConditionerControl":ACStateTypes is a complexType.
struct acc1__ACStateTypes
{
/// Size of array of struct acc1__ACStateType* is 0..unbounded
    int                                  __sizeStates                  ;
/// Array of length 0..unbounded
    struct acc1__ACStateType*            States                         0;
};

/// Element "http://www.ws4d.org/axis2/tutorial/AirConditionerControl":ACState of type "http://www.ws4d.org/axis2/tutorial/AirConditionerControl":ACStateType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ws4d.org/axis2/tutorial/AirConditionerControl":TargetTemperature of type xs:int.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ws4d.org/axis2/tutorial/AirConditionerControl":ACStates of type "http://www.ws4d.org/axis2/tutorial/AirConditionerControl":ACStateTypes.
/// Note: use wsdl2h option -g to generate this global element declaration.

/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap acc1 service name:	ACControlServiceSoap12Binding
//gsoap acc1 service type:	ACControlService
//gsoap acc1 service port:
//gsoap acc1 service namespace:	http://www.ws4d.org/axis2/tutorial/AirConditionerControl
//gsoap acc1 service transport:	http://schemas.xmlsoap.org/soap/http

/** @mainpage Service Definitions

@section Service_bindings Bindings
  - @ref ACControlServiceSoap12Binding

*/

/**

@page ACControlServiceSoap12Binding Binding "ACControlServiceSoap12Binding"

@section ACControlServiceSoap12Binding_operations Operations of Binding  "ACControlServiceSoap12Binding"
  - @ref __acc1__GetStatus
  - @ref __acc1__SetTargetTemperature

@section ACControlServiceSoap12Binding_ports Endpoints of Binding  "ACControlServiceSoap12Binding"
  -

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * ACControlServiceSoap12Binding                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * __acc1__GetStatus                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__acc1__GetStatus" of service binding "ACControlServiceSoap12Binding"

/**

Operation details:

  - SOAP document/literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___acc1__GetStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    // response parameters:
    struct acc1__ACStateTypes*          acc1__ACStates
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __acc1__GetStatus(
    struct soap *soap,
    // request parameters:
    // response parameters:
    struct acc1__ACStateTypes*          acc1__ACStates
  );
@endcode

*/

//gsoap acc1 service method-style:	GetStatus document
//gsoap acc1 service method-encoding:	GetStatus literal
//gsoap acc1 service method-action:	GetStatus http://www.ws4d.org/axis2/tutorial/AirConditionerControl/GetStatusIn
int __acc1__GetStatus(
    struct _acc1__EmptyMessage*         acs1__GetStatus,
    struct acc1__ACStateTypes*          acc1__ACStates	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __acc1__SetTargetTemperature                                               *
 *                                                                            *
\******************************************************************************/

/// Operation response struct "__acc1__SetTargetTemperatureResponse" of service binding "ACControlServiceSoap12Binding" operation "__acc1__SetTargetTemperature"
struct __acc1__SetTargetTemperatureResponse
{
  void *_;
};

/// Operation "__acc1__SetTargetTemperature" of service binding "ACControlServiceSoap12Binding"

/**

Operation details:

  - SOAP document/literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___acc1__SetTargetTemperature(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    int                                 acc1__TargetTemperature,
    // response parameters:
    struct __acc1__SetTargetTemperatureResponse*
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __acc1__SetTargetTemperature(
    struct soap *soap,
    // request parameters:
    int                                 acc1__TargetTemperature,
    // response parameters:
    struct __acc1__SetTargetTemperatureResponse*
  );
@endcode

*/

//gsoap acc1 service method-style:	SetTargetTemperature document
//gsoap acc1 service method-encoding:	SetTargetTemperature literal
//gsoap acc1 service method-action:	SetTargetTemperature http://www.ws4d.org/axis2/tutorial/AirConditionerControl/SetTargetTemperatureIn
int __acc1__SetTargetTemperature(
    int                                 acc1__TargetTemperature,	///< Request parameter
    struct __acc1__SetTargetTemperatureResponse*	///< Response struct parameter
);

/* End of acc.gsoap */
