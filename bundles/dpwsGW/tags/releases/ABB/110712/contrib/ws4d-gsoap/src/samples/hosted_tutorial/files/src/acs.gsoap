/* Copyright (C) 2007  University of Rostock
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 * 02110-1301 USA.
 */

//gsoapopt cw

/******************************************************************************\
 *                                                                            *
 * http://www.ws4d.org/axis2/tutorial/AirConditioner                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/

#import "devprof.gsoap"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/

// This service uses SOAP 1.2 namespaces:
//gsoap SOAP-ENV schema namespace:	http://www.w3.org/2003/05/soap-envelope
//gsoap SOAP-ENC schema namespace:	http://www.w3.org/2003/05/soap-encoding

/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

acs1 = "http://www.ws4d.org/axis2/tutorial/AirConditioner"

*/

//gsoap acs1  schema namespace:	http://www.ws4d.org/axis2/tutorial/AirConditioner
//gsoap acs1  schema elementForm:	qualified
//gsoap acs1  schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Schema Types                                                               *
 *                                                                            *
\******************************************************************************/

struct _acs1__EmptyMessage
{
  void *_;
}; 

/// "http://www.ws4d.org/axis2/tutorial/AirConditioner":ACStateType is a complexType.
struct acs1__ACStateType
{
/// Element CurrentTemp of type xs:int.
    int                                  CurrentTemp                    1;	///< Required element.
/// Element TargetTemp of type xs:int.
    int                                  TargetTemp                     1;	///< Required element.
};

/// Element "http://www.ws4d.org/axis2/tutorial/AirConditioner":ACState of type "http://www.ws4d.org/axis2/tutorial/AirConditioner":ACStateType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://www.ws4d.org/axis2/tutorial/AirConditioner":TargetTemperature of type xs:int.
/// Note: use wsdl2h option -g to generate this global element declaration.

/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap acs1 service name:	ACServiceSoap12Binding 
//gsoap acs1 service type:	ACService 
//gsoap acs1 service port:	 
//gsoap acs1 service namespace:	http://www.ws4d.org/axis2/tutorial/AirConditioner 
//gsoap acs1 service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Bindings
  - @ref ACServiceSoap12Binding

*/

/**

@page ACServiceSoap12Binding Binding "ACServiceSoap12Binding"

@section ACServiceSoap12Binding_operations Operations of Binding  "ACServiceSoap12Binding"
  - @ref __acs1__GetStatus
  - @ref __acs1__SetTargetTemperature

@section ACServiceSoap12Binding_ports Endpoints of Binding  "ACServiceSoap12Binding"
  - 

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * ACServiceSoap12Binding                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * __acs1__GetStatus                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__acs1__GetStatus" of service binding "ACServiceSoap12Binding"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://www.ws4d.org/axis2/tutorial/AirConditioner/GetStatus"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___acs1__GetStatus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    // response parameters:
    struct acs1__ACStateType*           acs1__ACState
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __acs1__GetStatus(
    struct soap *soap,
    // request parameters:
    // response parameters:
    struct acs1__ACStateType*           acs1__ACState
  );
@endcode

*/

//gsoap acs1 service method-style:	GetStatus document
//gsoap acs1 service method-encoding:	GetStatus literal
//gsoap acs1 service method-action:	GetStatus http://www.ws4d.org/axis2/tutorial/AirConditioner/GetStatusIn
int __acs1__GetStatus(
	struct _acs1__EmptyMessage*         acs1__GetStatus,	
    struct acs1__ACStateType*           acs1__ACState	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __acs1__SetTargetTemperature                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__acs1__SetTargetTemperature" of service binding "ACServiceSoap12Binding"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://www.ws4d.org/axis2/tutorial/AirConditioner/SetTargetTemperatureIn"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___acs1__SetTargetTemperature(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    int                                 acs1__TargetTemperature,
    // response parameters:
    struct acs1__ACStateType*           acs1__ACState
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __acs1__SetTargetTemperature(
    struct soap *soap,
    // request parameters:
    int                                 acs1__TargetTemperature,
    // response parameters:
    struct acs1__ACStateType*           acs1__ACState
  );
@endcode

*/

//gsoap acs1 service method-style:	SetTargetTemperature document
//gsoap acs1 service method-encoding:	SetTargetTemperature literal
//gsoap acs1 service method-action:	SetTargetTemperature http://www.ws4d.org/axis2/tutorial/AirConditioner/SetTargetTemperatureIn
int __acs1__SetTargetTemperature(
    int                                 acs1__TargetTemperature,	///< Request parameter
    struct acs1__ACStateType*           acs1__ACState	///< Response parameter
);

/* End of acs.gsoap */
