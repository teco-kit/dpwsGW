//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NodeDiscovery.DeviceInfoService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.teco.edu/DeviceInfoService", ConfigurationName="DeviceInfoService.DeviceInfoService")]
    public interface DeviceInfoService {
        
        // CODEGEN: Generating message contract since the operation StopNode is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.teco.edu/DeviceInfoService/StopNodeIn", ReplyAction="http://www.teco.edu/DeviceInfoService/StopNodeOut")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NodeDiscovery.DeviceInfoService.StopNodeResponse StopNode(NodeDiscovery.DeviceInfoService.StopNodeRequest request);
        
        // CODEGEN: Generating message contract since the operation GetNodeStatus is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.teco.edu/DeviceInfoService/GetNodeStatusIn", ReplyAction="http://www.teco.edu/DeviceInfoService/GetNodeStatusOut")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NodeDiscovery.DeviceInfoService.GetNodeStatusResponse GetNodeStatus(NodeDiscovery.DeviceInfoService.GetNodeStatusRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class StopNodeRequest {
        
        public StopNodeRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class StopNodeResponse {
        
        public StopNodeResponse() {
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.teco.edu/DeviceInfoService")]
    public partial class StatusMessage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string descriptionField;
        
        private bool readyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool ready {
            get {
                return this.readyField;
            }
            set {
                this.readyField = value;
                this.RaisePropertyChanged("ready");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetNodeStatusRequest {
        
        public GetNodeStatusRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetNodeStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.teco.edu/DeviceInfoService", Order=0)]
        public NodeDiscovery.DeviceInfoService.StatusMessage status;
        
        public GetNodeStatusResponse() {
        }
        
        public GetNodeStatusResponse(NodeDiscovery.DeviceInfoService.StatusMessage status) {
            this.status = status;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DeviceInfoServiceChannel : NodeDiscovery.DeviceInfoService.DeviceInfoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeviceInfoServiceClient : System.ServiceModel.ClientBase<NodeDiscovery.DeviceInfoService.DeviceInfoService>, NodeDiscovery.DeviceInfoService.DeviceInfoService {
        
        public DeviceInfoServiceClient() {
        }
        
        public DeviceInfoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DeviceInfoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeviceInfoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeviceInfoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NodeDiscovery.DeviceInfoService.StopNodeResponse NodeDiscovery.DeviceInfoService.DeviceInfoService.StopNode(NodeDiscovery.DeviceInfoService.StopNodeRequest request) {
            return base.Channel.StopNode(request);
        }
        
        public void StopNode() {
            NodeDiscovery.DeviceInfoService.StopNodeRequest inValue = new NodeDiscovery.DeviceInfoService.StopNodeRequest();
            NodeDiscovery.DeviceInfoService.StopNodeResponse retVal = ((NodeDiscovery.DeviceInfoService.DeviceInfoService)(this)).StopNode(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NodeDiscovery.DeviceInfoService.GetNodeStatusResponse NodeDiscovery.DeviceInfoService.DeviceInfoService.GetNodeStatus(NodeDiscovery.DeviceInfoService.GetNodeStatusRequest request) {
            return base.Channel.GetNodeStatus(request);
        }
        
        public NodeDiscovery.DeviceInfoService.StatusMessage GetNodeStatus() {
            NodeDiscovery.DeviceInfoService.GetNodeStatusRequest inValue = new NodeDiscovery.DeviceInfoService.GetNodeStatusRequest();
            NodeDiscovery.DeviceInfoService.GetNodeStatusResponse retVal = ((NodeDiscovery.DeviceInfoService.DeviceInfoService)(this)).GetNodeStatus(inValue);
            return retVal.status;
        }
    }
}
