//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NodeDiscovery.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.teco.edu/SensorValues", ConfigurationName="ServiceReference1.SensorValues", CallbackContract=typeof(NodeDiscovery.ServiceReference1.SensorValuesCallback))]
    public interface SensorValues {
        
        // CODEGEN: Generating message contract since the operation GetSensorValues is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.teco.edu/SensorValues/SensorValues/GetSensorValuesRequest", ReplyAction="http://www.teco.edu/SensorValues/SensorValues/GetSensorValuesResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NodeDiscovery.ServiceReference1.GetSensorValuesResponse GetSensorValues(NodeDiscovery.ServiceReference1.GetSensorValuesRequest request);
        
        // CODEGEN: Generating message contract since the operation Config is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://www.teco.edu/SensorValues/SensorValues/ConfigRequest", ReplyAction="http://www.teco.edu/SensorValues/SensorValues/ConfigResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        NodeDiscovery.ServiceReference1.ConfigResponse Config(NodeDiscovery.ServiceReference1.ConfigRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SensorValuesCallback {
        
        // CODEGEN: Generating message contract since the operation SensorValuesEvent is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://www.teco.edu/SensorValues/SensorValues/SensorValuesEvent")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SensorValuesEvent(NodeDiscovery.ServiceReference1.SensorValuesEvent request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.teco.edu/SensorValues")]
    public partial class SSimpSample : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime timeStampField;
        
        private bool timeStampFieldSpecified;
        
        private ADXL210_Sample accellerationField;
        
        private SP101_Sample audioField;
        
        private TSL2550_Sample lightField;
        
        private FSR152_Sample forceField;
        
        private TC74_Sample temperatureField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.DateTime TimeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
                this.RaisePropertyChanged("TimeStamp");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeStampSpecified {
            get {
                return this.timeStampFieldSpecified;
            }
            set {
                this.timeStampFieldSpecified = value;
                this.RaisePropertyChanged("TimeStampSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public ADXL210_Sample Accelleration {
            get {
                return this.accellerationField;
            }
            set {
                this.accellerationField = value;
                this.RaisePropertyChanged("Accelleration");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public SP101_Sample Audio {
            get {
                return this.audioField;
            }
            set {
                this.audioField = value;
                this.RaisePropertyChanged("Audio");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public TSL2550_Sample Light {
            get {
                return this.lightField;
            }
            set {
                this.lightField = value;
                this.RaisePropertyChanged("Light");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public FSR152_Sample Force {
            get {
                return this.forceField;
            }
            set {
                this.forceField = value;
                this.RaisePropertyChanged("Force");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public TC74_Sample Temperature {
            get {
                return this.temperatureField;
            }
            set {
                this.temperatureField = value;
                this.RaisePropertyChanged("Temperature");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.teco.edu/SensorValues")]
    public partial class ADXL210_Sample : object, System.ComponentModel.INotifyPropertyChanged {
        
        private short xField;
        
        private short yField;
        
        private short zField;
        
        private sbyte indexField;
        
        private bool indexFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public short x {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
                this.RaisePropertyChanged("x");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public short y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
                this.RaisePropertyChanged("y");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public short z {
            get {
                return this.zField;
            }
            set {
                this.zField = value;
                this.RaisePropertyChanged("z");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public sbyte index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
                this.RaisePropertyChanged("index");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool indexSpecified {
            get {
                return this.indexFieldSpecified;
            }
            set {
                this.indexFieldSpecified = value;
                this.RaisePropertyChanged("indexSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.teco.edu/SensorValues")]
    public partial class SSimpStatus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private SensorConfigurationType sensorConfigField;
        
        private SensorConfigurationType allSensorConfigField;
        
        private ushort batteryVoltageField;
        
        private System.DateTime currentTimeField;
        
        private System.DateTime upTimeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public SensorConfigurationType SensorConfig {
            get {
                return this.sensorConfigField;
            }
            set {
                this.sensorConfigField = value;
                this.RaisePropertyChanged("SensorConfig");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public SensorConfigurationType AllSensorConfig {
            get {
                return this.allSensorConfigField;
            }
            set {
                this.allSensorConfigField = value;
                this.RaisePropertyChanged("AllSensorConfig");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public ushort BatteryVoltage {
            get {
                return this.batteryVoltageField;
            }
            set {
                this.batteryVoltageField = value;
                this.RaisePropertyChanged("BatteryVoltage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public System.DateTime CurrentTime {
            get {
                return this.currentTimeField;
            }
            set {
                this.currentTimeField = value;
                this.RaisePropertyChanged("CurrentTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public System.DateTime UpTime {
            get {
                return this.upTimeField;
            }
            set {
                this.upTimeField = value;
                this.RaisePropertyChanged("UpTime");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.teco.edu/SensorValues")]
    public partial class SensorConfigurationType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private SSimpRateConfig accelerationField;
        
        private SSimpRateConfig audioField;
        
        private SSimpRateConfig lightField;
        
        private SSimpRateConfig ambientLightField;
        
        private SSimpRateConfig forceField;
        
        private SSimpRateConfig temperatureField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public SSimpRateConfig Acceleration {
            get {
                return this.accelerationField;
            }
            set {
                this.accelerationField = value;
                this.RaisePropertyChanged("Acceleration");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public SSimpRateConfig Audio {
            get {
                return this.audioField;
            }
            set {
                this.audioField = value;
                this.RaisePropertyChanged("Audio");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public SSimpRateConfig Light {
            get {
                return this.lightField;
            }
            set {
                this.lightField = value;
                this.RaisePropertyChanged("Light");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public SSimpRateConfig AmbientLight {
            get {
                return this.ambientLightField;
            }
            set {
                this.ambientLightField = value;
                this.RaisePropertyChanged("AmbientLight");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public SSimpRateConfig Force {
            get {
                return this.forceField;
            }
            set {
                this.forceField = value;
                this.RaisePropertyChanged("Force");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public SSimpRateConfig Temperature {
            get {
                return this.temperatureField;
            }
            set {
                this.temperatureField = value;
                this.RaisePropertyChanged("Temperature");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.teco.edu/SensorValues")]
    public partial class SSimpRateConfig : object, System.ComponentModel.INotifyPropertyChanged {
        
        private sbyte rateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public sbyte rate {
            get {
                return this.rateField;
            }
            set {
                this.rateField = value;
                this.RaisePropertyChanged("rate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.teco.edu/SensorValues")]
    public partial class SSimpControl : object, System.ComponentModel.INotifyPropertyChanged {
        
        private SensorConfigurationType sensorConfigField;
        
        private System.DateTime newTimeField;
        
        private bool newTimeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public SensorConfigurationType SensorConfig {
            get {
                return this.sensorConfigField;
            }
            set {
                this.sensorConfigField = value;
                this.RaisePropertyChanged("SensorConfig");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.DateTime NewTime {
            get {
                return this.newTimeField;
            }
            set {
                this.newTimeField = value;
                this.RaisePropertyChanged("NewTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NewTimeSpecified {
            get {
                return this.newTimeFieldSpecified;
            }
            set {
                this.newTimeFieldSpecified = value;
                this.RaisePropertyChanged("NewTimeSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.teco.edu/SensorValues")]
    public partial class TC74_Sample : object, System.ComponentModel.INotifyPropertyChanged {
        
        private sbyte valueField;
        
        private sbyte indexField;
        
        private bool indexFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public sbyte value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("value");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public sbyte index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
                this.RaisePropertyChanged("index");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool indexSpecified {
            get {
                return this.indexFieldSpecified;
            }
            set {
                this.indexFieldSpecified = value;
                this.RaisePropertyChanged("indexSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.teco.edu/SensorValues")]
    public partial class FSR152_Sample : object, System.ComponentModel.INotifyPropertyChanged {
        
        private byte valueField;
        
        private sbyte indexField;
        
        private bool indexFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public byte value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("value");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public sbyte index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
                this.RaisePropertyChanged("index");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool indexSpecified {
            get {
                return this.indexFieldSpecified;
            }
            set {
                this.indexFieldSpecified = value;
                this.RaisePropertyChanged("indexSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.teco.edu/SensorValues")]
    public partial class TSL2550_Sample : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ushort daylightField;
        
        private ushort infraredField;
        
        private sbyte indexField;
        
        private bool indexFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ushort daylight {
            get {
                return this.daylightField;
            }
            set {
                this.daylightField = value;
                this.RaisePropertyChanged("daylight");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public ushort infrared {
            get {
                return this.infraredField;
            }
            set {
                this.infraredField = value;
                this.RaisePropertyChanged("infrared");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public sbyte index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
                this.RaisePropertyChanged("index");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool indexSpecified {
            get {
                return this.indexFieldSpecified;
            }
            set {
                this.indexFieldSpecified = value;
                this.RaisePropertyChanged("indexSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.teco.edu/SensorValues")]
    public partial class SP101_Sample : object, System.ComponentModel.INotifyPropertyChanged {
        
        private byte volumeField;
        
        private sbyte indexField;
        
        private bool indexFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public byte volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
                this.RaisePropertyChanged("volume");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public sbyte index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
                this.RaisePropertyChanged("index");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool indexSpecified {
            get {
                return this.indexFieldSpecified;
            }
            set {
                this.indexFieldSpecified = value;
                this.RaisePropertyChanged("indexSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetSensorValuesRequest {
        
        public GetSensorValuesRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetSensorValuesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.teco.edu/SensorValues", Order=0)]
        public NodeDiscovery.ServiceReference1.SSimpSample Sample;
        
        public GetSensorValuesResponse() {
        }
        
        public GetSensorValuesResponse(NodeDiscovery.ServiceReference1.SSimpSample Sample) {
            this.Sample = Sample;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SensorValuesEvent {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.teco.edu/SensorValues", Order=0)]
        public NodeDiscovery.ServiceReference1.SSimpSample Sample;
        
        public SensorValuesEvent() {
        }
        
        public SensorValuesEvent(NodeDiscovery.ServiceReference1.SSimpSample Sample) {
            this.Sample = Sample;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ConfigRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.teco.edu/SensorValues", Order=0)]
        public NodeDiscovery.ServiceReference1.SSimpControl StatusControl;
        
        public ConfigRequest() {
        }
        
        public ConfigRequest(NodeDiscovery.ServiceReference1.SSimpControl StatusControl) {
            this.StatusControl = StatusControl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ConfigResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.teco.edu/SensorValues", Order=0)]
        public NodeDiscovery.ServiceReference1.SSimpStatus Status;
        
        public ConfigResponse() {
        }
        
        public ConfigResponse(NodeDiscovery.ServiceReference1.SSimpStatus Status) {
            this.Status = Status;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SensorValuesChannel : NodeDiscovery.ServiceReference1.SensorValues, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SensorValuesClient : System.ServiceModel.DuplexClientBase<NodeDiscovery.ServiceReference1.SensorValues>, NodeDiscovery.ServiceReference1.SensorValues {
        
        public SensorValuesClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public SensorValuesClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public SensorValuesClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SensorValuesClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SensorValuesClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NodeDiscovery.ServiceReference1.GetSensorValuesResponse NodeDiscovery.ServiceReference1.SensorValues.GetSensorValues(NodeDiscovery.ServiceReference1.GetSensorValuesRequest request) {
            return base.Channel.GetSensorValues(request);
        }
        
        public NodeDiscovery.ServiceReference1.SSimpSample GetSensorValues() {
            NodeDiscovery.ServiceReference1.GetSensorValuesRequest inValue = new NodeDiscovery.ServiceReference1.GetSensorValuesRequest();
            NodeDiscovery.ServiceReference1.GetSensorValuesResponse retVal = ((NodeDiscovery.ServiceReference1.SensorValues)(this)).GetSensorValues(inValue);
            return retVal.Sample;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NodeDiscovery.ServiceReference1.ConfigResponse NodeDiscovery.ServiceReference1.SensorValues.Config(NodeDiscovery.ServiceReference1.ConfigRequest request) {
            return base.Channel.Config(request);
        }
        
        public NodeDiscovery.ServiceReference1.SSimpStatus Config(NodeDiscovery.ServiceReference1.SSimpControl StatusControl) {
            NodeDiscovery.ServiceReference1.ConfigRequest inValue = new NodeDiscovery.ServiceReference1.ConfigRequest();
            inValue.StatusControl = StatusControl;
            NodeDiscovery.ServiceReference1.ConfigResponse retVal = ((NodeDiscovery.ServiceReference1.SensorValues)(this)).Config(inValue);
            return retVal.Status;
        }
    }
}
