/* lcm.gsoap
   Generated by wsdl2h 1.2.10 from life-cycle-manager.wsdl and typemap.dat
   2008-03-25 13:03:04 GMT
   Copyright (C) 2001-2008 Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/* NOTE:

 - Compile this file with soapcpp2 to complete the code generation process.
 - Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'WS/typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) to browse this file.
 - Use wsdl2h option -l to view the software license terms.

   DO NOT include this file directly into your project.
   Include only the soapcpp2-generated headers and source code files.
*/

//gsoapopt cw

/******************************************************************************\
 *                                                                            *
 * http://www.ws4d.org/services/life-cycle-manager                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/

#import "devprof.gsoap"
#import "xop.h"

//gsoap wsm schema import: http://schemas.xmlsoap.org/ws/2004/09/mex/
#import "mex.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://www.ws4d.org/services/life-cycle-manager"

*/

//gsoap ns1   schema namespace:	http://www.ws4d.org/services/life-cycle-manager
//gsoap ns1   schema elementForm:	qualified
//gsoap ns1   schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Schema Types                                                               *
 *                                                                            *
\******************************************************************************/


/// Built-in type "xs:hexBinary".
struct xsd__hexBinary { unsigned char *__ptr; int __size; };



/// Element "http://www.ws4d.org/services/life-cycle-manager":install of complexType.

/// "http://www.ws4d.org/services/life-cycle-manager":install is a complexType.
struct _ns1__install
{
/// Element CRC of type xs:int.
    int                                CRC                            1;        ///< Required element.
/// Element Param of type xs:base64Binary.
    _xop__Include                        Param                          1;      ///< Required element.
/// TODO: <anyAttribute namespace="##other">
///       Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
   @_XML                                 __anyAttribute                ;        ///< Catch any attribute content in XML string.
};


/// Element "http://www.ws4d.org/services/life-cycle-manager":installResponse of complexType.

/// "http://www.ws4d.org/services/life-cycle-manager":installResponse is a complexType.
struct _ns1__installResponse
{
/// Element status of type xs:int.
    int                                  status                         1;	///< Required element.
/// Element serviceID of type xs:string.
    char*                                serviceID                      1;	///< Required element.
};


/// Element "http://www.ws4d.org/services/life-cycle-manager":uninstall of complexType.

/// "http://www.ws4d.org/services/life-cycle-manager":uninstall is a complexType.
struct _ns1__uninstall
{
/// Element serviceID of type xs:string.
    char*                                serviceID                      1;	///< Required element.
};


/// Element "http://www.ws4d.org/services/life-cycle-manager":uninstallResponse of complexType.

/// "http://www.ws4d.org/services/life-cycle-manager":uninstallResponse is a complexType.
struct _ns1__uninstallResponse
{
/// Element status of type xs:int.
    int                                  status                         1;	///< Required element.
};


/// Element "http://www.ws4d.org/services/life-cycle-manager":start of complexType.

/// "http://www.ws4d.org/services/life-cycle-manager":start is a complexType.
struct _ns1__start
{
/// Element serviceID of type xs:string.
    char*                                serviceID                      1;	///< Required element.
};


/// Element "http://www.ws4d.org/services/life-cycle-manager":startResponse of complexType.

/// "http://www.ws4d.org/services/life-cycle-manager":startResponse is a complexType.
struct _ns1__startResponse
{
/// Element status of type xs:int.
    int                                  status                         1;	///< Required element.
};


/// Element "http://www.ws4d.org/services/life-cycle-manager":stop of complexType.

/// "http://www.ws4d.org/services/life-cycle-manager":stop is a complexType.
struct _ns1__stop
{
/// Element serviceID of type xs:string.
    char*                                serviceID                      1;	///< Required element.
};


/// Element "http://www.ws4d.org/services/life-cycle-manager":stopResponse of complexType.

/// "http://www.ws4d.org/services/life-cycle-manager":stopResponse is a complexType.
struct _ns1__stopResponse
{
/// Element status of type xs:int.
    int                                  status                         1;	///< Required element.
};


/// Element "http://www.ws4d.org/services/life-cycle-manager":getState of complexType.

/// "http://www.ws4d.org/services/life-cycle-manager":getState is a complexType.
struct _ns1__getState
{
/// Element serviceID of type xs:string.
    char*                                serviceID                      1;	///< Required element.
};


/// Element "http://www.ws4d.org/services/life-cycle-manager":getStateResponse of complexType.

/// "http://www.ws4d.org/services/life-cycle-manager":getStateResponse is a complexType.
struct _ns1__getStateResponse
{
/// Element status of type xs:int.
    int                                  status                         1;	///< Required element.
/// Element serviceState of type xs:int.
    int                                  serviceState                   1;	///< Required element.
/// Element uuid of type xs:string.
    char*                                uuid                           1;	///< Required element.
/// Element valid of type xs:int.
    int                                  valid                          1;	///< Required element.
/// Element soFile of type xs:string.
    char*                                soFile                         1;	///< Required element.
/// Element name of type xs:string.
    char*                                name                           1;	///< Required element.
/// Element type of type xs:string.
    char*                                type                           1;	///< Required element.
/// Element host of type xs:string.
    char*                                host                           1;	///< Required element.
/// Element version of type xs:string.
    char*                                version                        1;	///< Required element.
/// Element author of type xs:string.
    char*                                author                         1;	///< Required element.
/// Element vendor of type xs:string.
    char*                                vendor                         1;	///< Required element.
/// Element serialNumber of type xs:string.
    char*                                serialNumber                   1;	///< Required element.
};


/// Element "http://www.ws4d.org/services/life-cycle-manager":resolve of complexType.

/// "http://www.ws4d.org/services/life-cycle-manager":resolve is a complexType.
struct _ns1__resolve
{
/// Element serviceID of type xs:string.
    char*                                serviceID                      1;	///< Required element.
};


/// Element "http://www.ws4d.org/services/life-cycle-manager":resolveResponse of complexType.

/// "http://www.ws4d.org/services/life-cycle-manager":resolveResponse is a complexType.
struct _ns1__resolveResponse
{
/// Element status of type xs:int.
    int                                  status                         1;	///< Required element.
};


/// Element "http://www.ws4d.org/services/life-cycle-manager":update of complexType.

/// "http://www.ws4d.org/services/life-cycle-manager":update is a complexType.
struct _ns1__update
{
/// Element serviceID of type xs:string.
    char*                                serviceID                      1;	///< Required element.
/// Element CRC of type xs:int.
    int                                CRC                            1;        ///< Required element.
/// Element Param of type xs:base64Binary.
    _xop__Include                        Param                          1;      ///< Required element.
/// TODO: <anyAttribute namespace="##other">
///       Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
   @_XML                                 __anyAttribute                ;        ///< Catch any attribute content in XML string.
};


/// Element "http://www.ws4d.org/services/life-cycle-manager":updateResponse of complexType.

/// "http://www.ws4d.org/services/life-cycle-manager":updateResponse is a complexType.
struct _ns1__updateResponse
{
/// Element status of type xs:int.
    int                                  status                         1;	///< Required element.
};


/// Element "http://www.ws4d.org/services/life-cycle-manager": of complexType.

/// "http://www.ws4d.org/services/life-cycle-manager": is a complexType.
struct _ns1__
{
/// Element in of type xs:string.
    char*                                in                             1;	///< Required element.
};


/// Element "http://www.ws4d.org/services/life-cycle-manager":Response of complexType.

/// "http://www.ws4d.org/services/life-cycle-manager":Response is a complexType.
struct _ns1__Response
{
/// Element out of type xs:string.
    char*                                out                            1;	///< Required element.
};


/// Element "http://www.ws4d.org/services/life-cycle-manager":ListAll of complexType.

/// "http://www.ws4d.org/services/life-cycle-manager":ListAll is a complexType.
struct _ns1__ListAll
{
/// Element in of type xs:string.
    char*                                in                             1;	///< Required element.
};


/// Element "http://www.ws4d.org/services/life-cycle-manager":ListAllResponse of complexType.

/// "http://www.ws4d.org/services/life-cycle-manager":ListAllResponse is a complexType.
struct _ns1__ListAllResponse
{
/// Size of array of char** is 0..unbounded
    int                                  __sizeservices                ;
/// Array of length 0..unbounded
    char**                               services                       0;
/// Element status of type xs:int.
    int                                  status                         1;	///< Required element.
};

/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns1  service name:	life_cycle_manager
//gsoap ns1  service type:	life_cycle_manager
//gsoap ns1  service port:
//gsoap ns1  service namespace:	http://www.ws4d.org/services/life-cycle-manager
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http

/** @mainpage Service Definitions

@section Service_bindings Bindings
  - @ref life_cycle_manager

*/

/**

@page life_cycle_manager Binding "life_cycle_manager"

@section life_cycle_manager_operations Operations of Binding  "life_cycle_manager"
  - @ref __ns1__install
  - @ref __ns1__uninstall
  - @ref __ns1__start
  - @ref __ns1__stop
  - @ref __ns1__getState
  - @ref __ns1__resolve
  - @ref __ns1__update
  - @ref __ns1__ListAll

@section life_cycle_manager_ports Endpoints of Binding  "life_cycle_manager"
  -

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * life_cycle_manager                                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * __ns1__install                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__install" of service binding "life_cycle_manager"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://www.ws4d.org/services/life-cycle-manager/installRequest"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__install(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _ns1__install*               ns1__install,
    // response parameters:
    struct _ns1__installResponse*       ns1__installResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__install(
    struct soap *soap,
    // request parameters:
    struct _ns1__install*               ns1__install,
    // response parameters:
    struct _ns1__installResponse*       ns1__installResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	install document
//gsoap ns1  service method-encoding:	install literal
//gsoap ns1  service method-action:	install http://www.ws4d.org/services/life-cycle-manager/installRequest
int __ns1__install(
    struct _ns1__install*               ns1__install,	///< Request parameter
    struct _ns1__installResponse*       ns1__installResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__uninstall                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__uninstall" of service binding "life_cycle_manager"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://www.ws4d.org/services/life-cycle-manager/uninstallRequest"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__uninstall(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _ns1__uninstall*             ns1__uninstall,
    // response parameters:
    struct _ns1__uninstallResponse*     ns1__uninstallResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__uninstall(
    struct soap *soap,
    // request parameters:
    struct _ns1__uninstall*             ns1__uninstall,
    // response parameters:
    struct _ns1__uninstallResponse*     ns1__uninstallResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	uninstall document
//gsoap ns1  service method-encoding:	uninstall literal
//gsoap ns1  service method-action:	uninstall http://www.ws4d.org/services/life-cycle-manager/uninstallRequest
int __ns1__uninstall(
    struct _ns1__uninstall*             ns1__uninstall,	///< Request parameter
    struct _ns1__uninstallResponse*     ns1__uninstallResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__start                                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__start" of service binding "life_cycle_manager"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://www.ws4d.org/services/life-cycle-manager/startRequest"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__start(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _ns1__start*                 ns1__start,
    // response parameters:
    struct _ns1__startResponse*         ns1__startResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__start(
    struct soap *soap,
    // request parameters:
    struct _ns1__start*                 ns1__start,
    // response parameters:
    struct _ns1__startResponse*         ns1__startResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	start document
//gsoap ns1  service method-encoding:	start literal
//gsoap ns1  service method-action:	start http://www.ws4d.org/services/life-cycle-manager/startRequest
int __ns1__start(
    struct _ns1__start*                 ns1__start,	///< Request parameter
    struct _ns1__startResponse*         ns1__startResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__stop                                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__stop" of service binding "life_cycle_manager"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://www.ws4d.org/services/life-cycle-manager/stopRequest"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__stop(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _ns1__stop*                  ns1__stop,
    // response parameters:
    struct _ns1__stopResponse*          ns1__stopResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__stop(
    struct soap *soap,
    // request parameters:
    struct _ns1__stop*                  ns1__stop,
    // response parameters:
    struct _ns1__stopResponse*          ns1__stopResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	stop document
//gsoap ns1  service method-encoding:	stop literal
//gsoap ns1  service method-action:	stop http://www.ws4d.org/services/life-cycle-manager/stopRequest
int __ns1__stop(
    struct _ns1__stop*                  ns1__stop,	///< Request parameter
    struct _ns1__stopResponse*          ns1__stopResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__getState                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__getState" of service binding "life_cycle_manager"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://www.ws4d.org/services/life-cycle-manager/getStateRequest"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__getState(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _ns1__getState*              ns1__getState,
    // response parameters:
    struct _ns1__getStateResponse*      ns1__getStateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__getState(
    struct soap *soap,
    // request parameters:
    struct _ns1__getState*              ns1__getState,
    // response parameters:
    struct _ns1__getStateResponse*      ns1__getStateResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	getState document
//gsoap ns1  service method-encoding:	getState literal
//gsoap ns1  service method-action:	getState http://www.ws4d.org/services/life-cycle-manager/getStateRequest
int __ns1__getState(
    struct _ns1__getState*              ns1__getState,	///< Request parameter
    struct _ns1__getStateResponse*      ns1__getStateResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__resolve                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__resolve" of service binding "life_cycle_manager"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://www.ws4d.org/services/life-cycle-manager/resolveRequest"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__resolve(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _ns1__resolve*               ns1__resolve,
    // response parameters:
    struct _ns1__resolveResponse*       ns1__resolveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__resolve(
    struct soap *soap,
    // request parameters:
    struct _ns1__resolve*               ns1__resolve,
    // response parameters:
    struct _ns1__resolveResponse*       ns1__resolveResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	resolve document
//gsoap ns1  service method-encoding:	resolve literal
//gsoap ns1  service method-action:	resolve http://www.ws4d.org/services/life-cycle-manager/resolveRequest
int __ns1__resolve(
    struct _ns1__resolve*               ns1__resolve,	///< Request parameter
    struct _ns1__resolveResponse*       ns1__resolveResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__update                                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__update" of service binding "life_cycle_manager"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://www.ws4d.org/services/life-cycle-manager/updateRequest"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__update(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _ns1__update*                ns1__update,
    // response parameters:
    struct _ns1__updateResponse*        ns1__updateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__update(
    struct soap *soap,
    // request parameters:
    struct _ns1__update*                ns1__update,
    // response parameters:
    struct _ns1__updateResponse*        ns1__updateResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	update document
//gsoap ns1  service method-encoding:	update literal
//gsoap ns1  service method-action:	update http://www.ws4d.org/services/life-cycle-manager/updateRequest
int __ns1__update(
    struct _ns1__update*                ns1__update,	///< Request parameter
    struct _ns1__updateResponse*        ns1__updateResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__ListAll                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__ListAll" of service binding "life_cycle_manager"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://www.ws4d.org/services/life-cycle-manager/ListAllRequest"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__ListAll(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _ns1__ListAll*               ns1__ListAll,
    // response parameters:
    struct _ns1__ListAllResponse*       ns1__ListAllResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__ListAll(
    struct soap *soap,
    // request parameters:
    struct _ns1__ListAll*               ns1__ListAll,
    // response parameters:
    struct _ns1__ListAllResponse*       ns1__ListAllResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	ListAll document
//gsoap ns1  service method-encoding:	ListAll literal
//gsoap ns1  service method-action:	ListAll http://www.ws4d.org/services/life-cycle-manager/ListAllRequest
int __ns1__ListAll(
    struct _ns1__ListAll*               ns1__ListAll,	///< Request parameter
    struct _ns1__ListAllResponse*       ns1__ListAllResponse	///< Response parameter
);

/* End of lcm.gsoap */
