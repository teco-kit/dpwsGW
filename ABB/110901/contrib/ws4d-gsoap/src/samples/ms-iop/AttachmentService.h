/* Copyright (C) 2007  University of Rostock
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 * 02110-1301 USA.
 */

//gsoapopt cw

/******************************************************************************\
 *                                                                            *
 * http://schemas.example.org/AttachmentService                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/

#import "devprof.gsoap"
#import "xop.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/

/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ats1 = "http://schemas.example.org/AttachmentService"

*/

//gsoap ats1  schema namespace: http://schemas.example.org/AttachmentService
//gsoap ats1  schema elementForm:       qualified
//gsoap ats1  schema attributeForm:     unqualified

/******************************************************************************\
 *                                                                            *
 * Schema Types                                                               *
 *                                                                            *
\******************************************************************************/



/// "http://schemas.example.org/AttachmentService":AttachmentType is a complexType.
struct ats1__AttachmentType
{
/// Element Param of type xs:base64Binary.
  _xop__Include Param 1;        ///< Required element.
/// TODO: <anyAttribute namespace="##other">
///       Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
   @_XML __anyAttribute;        ///< Catch any attribute content in XML string.
};

/// Element "http://schemas.example.org/AttachmentService":OneWayAttachment of type "http://schemas.example.org/AttachmentService":AttachmentType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://schemas.example.org/AttachmentService":TwoWayAttachmentRequest of type "http://schemas.example.org/AttachmentService":AttachmentType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://schemas.example.org/AttachmentService":TwoWayAttachmentResponse of type "http://schemas.example.org/AttachmentService":AttachmentType.
/// Note: use wsdl2h option -g to generate this global element declaration.

/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ats1 service name:      AttachmentServiceSoap12Binding
//gsoap ats1 service type:      AttachmentService
//gsoap ats1 service port:      http://localhost/WebService/Attachment.asmx
//gsoap ats1 service namespace: http://schemas.example.org/AttachmentService
//gsoap ats1 service transport: http://schemas.xmlsoap.org/soap/http

/** @mainpage Service Definitions

@section Service_bindings Bindings
  - @ref AttachmentServiceSoap12Binding

*/

/**

@page AttachmentServiceSoap12Binding Binding "AttachmentServiceSoap12Binding"

@section AttachmentServiceSoap12Binding_operations Operations of Binding  "AttachmentServiceSoap12Binding"
  - @ref __ats1__OneWayAttachment
  - @ref __ats1__TwoWayAttachment

@section AttachmentServiceSoap12Binding_ports Endpoints of Binding  "AttachmentServiceSoap12Binding"
  - http://localhost/WebService/Attachment.asmx

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * AttachmentServiceSoap12Binding                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * __ats1__OneWayAttachment                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ats1__OneWayAttachment" of service binding "AttachmentServiceSoap12Binding"

/**

Operation details:

  - One-way message
  - SOAP document/literal style
  - SOAP action="http://schemas.example.org/AttachmentService/OneWayAttachment"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ats1__OneWayAttachment(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ats1__AttachmentType*        ats1__OneWayAttachment,
    // response parameters:
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ats1__OneWayAttachment(
    struct soap *soap,
    // request parameters:
    struct ats1__AttachmentType*        ats1__OneWayAttachment,
    // response parameters:
  );
@endcode

*/

//gsoap ats1 service method-style:      OneWayAttachment document
//gsoap ats1 service method-encoding:   OneWayAttachment literal
//gsoap ats1 service method-action:     OneWayAttachment http://schemas.example.org/AttachmentService/OneWayAttachment
int __ats1__OneWayAttachment (struct ats1__AttachmentType *ats1__OneWayAttachment,      ///< Request parameter
                              void      ///< One-way message: no response parameter
  );

/******************************************************************************\
 *                                                                            *
 * __ats1__TwoWayAttachment                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ats1__TwoWayAttachment" of service binding "AttachmentServiceSoap12Binding"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://schemas.example.org/AttachmentService/TwoWayAttachmentRequest"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ats1__TwoWayAttachment(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ats1__AttachmentType*        ats1__TwoWayAttachmentRequest,
    // response parameters:
    struct ats1__AttachmentType*        ats1__TwoWayAttachmentResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ats1__TwoWayAttachment(
    struct soap *soap,
    // request parameters:
    struct ats1__AttachmentType*        ats1__TwoWayAttachmentRequest,
    // response parameters:
    struct ats1__AttachmentType*        ats1__TwoWayAttachmentResponse
  );
@endcode

*/

//gsoap ats1 service method-style:      TwoWayAttachment document
//gsoap ats1 service method-encoding:   TwoWayAttachment literal
//gsoap ats1 service method-action:     TwoWayAttachment http://schemas.example.org/AttachmentService/TwoWayAttachmentRequest
int __ats1__TwoWayAttachment (struct ats1__AttachmentType *ats1__TwoWayAttachmentRequest,       ///< Request parameter
                              struct ats1__AttachmentType *ats1__TwoWayAttachmentResponse       ///< Response parameter
  );

/* End of AttachmentService.h */
